/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
   //default         backward;
   default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         Gauss limitedLinear 1;
    div(phi,h)      Gauss limitedLinear 1;
    div(phi,U)      Gauss limitedLinearV 1;
    div(phi,Yi_h)   Gauss limitedLinear 1;
    div(phid,p)     Gauss limitedLinear 1;
    div(phi,epsilon)      Gauss limitedLinear 1;
    div(phi,K)      Gauss limitedLinear 1;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear 1;
    div((((((rho*nut)+thermo:mu)*grad(U))+(((rho*nut)+thermo:mu)*dev2(grad(U).T())))&U))     Gauss linear;
}


// Modified 
/*
gradSchemes
{
    default         cellMDLimited leastSquares 1.0;
}

divSchemes
{
    default             none;
    div(phi,h)          Gauss upwind;
    div(phi,U)          Gauss upwind;
    div(phi,Yi_h)       Gauss upwind;
    div(phid,p)         Gauss upwind;
    div(phi,epsilon)    Gauss upwind;
    div(phi,K)          Gauss upwind;
    div(((rho*nuEff)*dev2(T(grad(U)))))     Gauss linear;
    div((((((rho*nut)+thermo:mu)*grad(U))+(((rho*nut)+thermo:mu)*dev2(grad(U).T())))&U))     Gauss linear;
}
*/

laplacianSchemes
{
    default         Gauss linear limited corrected 0.5;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         Gauss limited corrected 0.5;
}


// ************************************************************************* //
